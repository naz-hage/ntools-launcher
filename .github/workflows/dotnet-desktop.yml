name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build Type (stage or prod)'
        required: false
        default: 'stage'
  workflow_call:

env:
  Ntools: Nbuild
  Build_Type: ${{ github.event.inputs.build_type || 'stage' }}
  Enable_Logging: true # Enable additional logging

jobs:

  build:
    name: Build and Test
    strategy:
      matrix:
        #configuration: [Debug, Release]
        configuration: [Debug]
    runs-on: windows-latest

    steps:
    - name: Check Build Type | must be stage or prod
      run: |
        if ($env:Build_Type -ne "stage" -and $env:Build_Type -ne "prod") {
          Write-Output "Invalid build type: $env:Build_Type"
          exit 1
        }
      shell: pwsh

    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Install ntools
      run: |
        cd ./DevSetup
        ./install-ntools.ps1
      shell: pwsh
      working-directory: ${{ github.workspace }}

    - name: Set ProgramFiles and Ntools Paths
      run: |
        Get-Content -Path $env:GITHUB_PATH
        $programFilesPath = [System.Environment]::GetFolderPath('ProgramFiles')
        echo "ProgramFilesPath=$programFilesPath" | Out-File -FilePath $env:GITHUB_ENV -Append
        echo "$programFilesPath\${{ env.Ntools }}" | Out-File -FilePath $env:GITHUB_PATH -Append
        Get-Content -Path $env:GITHUB_PATH
      shell: pwsh
      working-directory: ${{ github.workspace }}

    - name: Display PATH environment variable
      run: |
        Get-Content -Path $env:GITHUB_PATH
        $env:PATH -split ';' | ForEach-Object { "PATH: $_" }
      shell: pwsh
      working-directory: ${{ github.workspace }}

    - name: Configure Git
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "actions@github.com"

    - name: Run build using ntools
      run: |
        & "$env:ProgramFilesPath/nbuild/nb.exe" ${{ env.Build_Type }} -v ${{ env.Enable_Logging }}
      shell: pwsh
      working-directory: ${{ github.workspace }}
      env:
        NugetApiKey: ${{ secrets.NUGETAPIKEY }}
        VTAPIKEY: ${{ secrets.VTAPIKEY }}
        DOTNET_CLI_TELEMETRY_OPTOUT: 1

  docs:
    name: Publish docs  # More descriptive name for the docs job
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies	
        run: |	
          python -m pip install --upgrade pip	
          pip install mkdocs	
      - name: Update docs	
        run: |	
          mkdocs build	
          mkdocs gh-deploy --force
